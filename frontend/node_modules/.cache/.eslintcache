[{"C:\\Users\\USER\\AbabaTask\\frontend\\src\\index.tsx":"1","C:\\Users\\USER\\AbabaTask\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\USER\\AbabaTask\\frontend\\src\\App.tsx":"3","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Login\\LoginPage.tsx":"4","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Login\\LoginComponent.tsx":"5","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Login\\Signup.tsx":"6","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\MoviePage.tsx":"7","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\AddMovie.tsx":"8","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\MovieList.tsx":"9","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\MovieCard.tsx":"10","C:\\Users\\USER\\AbabaTask\\frontend\\src\\hooks\\functionalityAuthentication.tsx":"11","C:\\Users\\USER\\AbabaTask\\frontend\\src\\hooks\\functionalityMovies.ts":"12","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\MovieSchema.ts":"13"},{"size":871,"mtime":1655580434480,"results":"14","hashOfConfig":"15"},{"size":440,"mtime":1655580434482,"results":"16","hashOfConfig":"15"},{"size":258,"mtime":1655580434464,"results":"17","hashOfConfig":"15"},{"size":1000,"mtime":1655580434466,"results":"18","hashOfConfig":"15"},{"size":1511,"mtime":1655580434465,"results":"19","hashOfConfig":"15"},{"size":1533,"mtime":1655580434467,"results":"20","hashOfConfig":"15"},{"size":684,"mtime":1655583563338,"results":"21","hashOfConfig":"15"},{"size":2369,"mtime":1655581129908,"results":"22","hashOfConfig":"15"},{"size":789,"mtime":1655584778578,"results":"23","hashOfConfig":"15"},{"size":550,"mtime":1655584733751,"results":"24","hashOfConfig":"15"},{"size":2317,"mtime":1655584867509,"results":"25","hashOfConfig":"15"},{"size":2108,"mtime":1655584835466,"results":"26","hashOfConfig":"15"},{"size":312,"mtime":1655583002875,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"592p3s",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"32"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\AbabaTask\\frontend\\src\\index.tsx",["75"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n}\r\n  from 'react-router-dom';\r\nimport Movies from './Features/Movie/MoviePage';\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <BrowserRouter>\r\n    <Routes>\r\n      <Route path='/' element={<App />} />\r\n      <Route path='/movie' element={<Movies />} />\r\n    </Routes>\r\n\r\n  </BrowserRouter>,\r\n\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\Users\\USER\\AbabaTask\\frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\USER\\AbabaTask\\frontend\\src\\App.tsx",["76"],[],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport LoginPage from './Features/Login/LoginPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <LoginPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Login\\LoginPage.tsx",[],[],"C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Login\\LoginComponent.tsx",["77","78"],[],"import React from 'react'\r\nimport { loginSchema } from './login';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\ntype Props = {\r\n    onSubmitForm: any\r\n}\r\nexport default function LoginComponent(props: Props) {\r\n    const { register, handleSubmit, setValue, reset } =\r\n    useForm<loginSchema>();\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <div className=\"title\">Sign In</div>\r\n            <div className=\"form\">\r\n                <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n                    <div className=\"input-container\">\r\n                        <label>Username </label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Company Code\"\r\n                            {...register(\"email\")} \r\n                        />\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label>Password </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Company Code\"\r\n                            {...register(\"password\")} \r\n                        />\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <input type=\"submit\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Login\\Signup.tsx",["79","80","81","82"],[],"import React from 'react'\r\nimport { loginSchema } from './login';\r\nimport { useForm, NestedValue, SubmitHandler  } from 'react-hook-form';\r\n\r\ntype Props = {\r\n    onSubmitForm: any\r\n}\r\n\r\nexport default function SignUp(props: Props) {\r\n\r\n    const { register, handleSubmit, setValue, reset } =\r\n    useForm<loginSchema>();\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <div className=\"title\">Sign Up</div>\r\n            <div className=\"form\">\r\n                <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n                    <div className=\"input-container\">\r\n                        <label>Email </label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Company Code\"\r\n                            {...register(\"email\")} \r\n                        />\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label>Password </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Company Code\"\r\n                            {...register(\"password\")} \r\n                        />\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <input type=\"submit\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\MoviePage.tsx",[],[],"C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\AddMovie.tsx",["83","84","85","86"],[],"import React from 'react'\r\nimport { useForm, NestedValue, SubmitHandler } from 'react-hook-form';\r\nimport { MovieSchema } from './MovieSchema';\r\n\r\ntype Props = {\r\n    onSubmitForm: any\r\n}\r\nexport default function AddMovie(props: Props) {\r\n    const { register, handleSubmit, setValue, reset } =\r\n        useForm<MovieSchema>();\r\n    return (\r\n        <>\r\n\r\n            <div className=\"login-form\">\r\n                <div>Add Movie</div>\r\n                <div className=\"form\">\r\n                    <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n                        <div className=\"input-container\">\r\n                            <label>Name </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter a movie name\"\r\n                                {...register(\"name\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-container\">\r\n                            <label>Poster Url </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter poster link\"\r\n                                {...register(\"posterUrl\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-container\">\r\n                            <label>Rating</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Rating 1 to 5\"\r\n                                defaultValue={1}\r\n                                min={1}\r\n                                max={5}\r\n                                {...register(\"rating\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"button-container\">\r\n                            <button\r\n                                type=\"submit\"\r\n                            >\r\n                                Add\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\MovieList.tsx",["87","88"],[],"C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\MovieCard.tsx",[],[],"C:\\Users\\USER\\AbabaTask\\frontend\\src\\hooks\\functionalityAuthentication.tsx",["89","90","91"],[],"import axios from 'axios';\r\nimport React from 'react'\r\nimport { ApiLoginResponse, loginSchema } from '../Features/Login/login';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nexport default function useFunctionalityAuthentication() {\r\n    const navigate = useNavigate();\r\n\r\n    const onLogin = React.useCallback(\r\n        async (form: loginSchema): Promise<null> => {\r\n            // const btnLoading = UtilsJQuery.Ladda(\".login-form-submit-btn\");\r\n            // btnLoading.start?.();\r\n            let apiUrl = \"http://localhost:3333/auth/signin\"\r\n\r\n            try {\r\n                const res = await axios.post<ApiLoginResponse>(\r\n                    apiUrl,\r\n                    form\r\n                );\r\n\r\n\r\n                if (res.data.access_token) {\r\n                    navigate({\r\n                        pathname: \"/movie\",\r\n                    });\r\n                  \r\n                }\r\n                else {\r\n                    // toast.error(res.data.message);\r\n                }\r\n\r\n            } catch (e: any) {\r\n                \r\n                console.log(\"error\", e)\r\n            }\r\n            // btnLoading.stop?.();\r\n            return Promise.resolve(null);\r\n        },\r\n        []\r\n    );\r\n\r\n\r\n    const onSignUp = React.useCallback(\r\n        async (form: loginSchema): Promise<null> => {\r\n            // const btnLoading = UtilsJQuery.Ladda(\".login-form-submit-btn\");\r\n            // btnLoading.start?.();\r\n            let apiUrl = \"http://localhost:3333/auth/signup\"\r\n\r\n            try {\r\n                const res = await axios.post<ApiLoginResponse>(\r\n                    apiUrl,\r\n                    form\r\n                );\r\n\r\n                if (res.status === 201) {\r\n                    if (res.data.access_token) {\r\n                       \r\n                    }\r\n                    else {\r\n                        // toast.error(res.data.message);\r\n                    }\r\n                }\r\n            } catch (e: any) {\r\n               \r\n                console.log(\"error\", e)\r\n            }\r\n            // btnLoading.stop?.();\r\n            return Promise.resolve(null);\r\n        },\r\n        []\r\n    );\r\n\r\n    return {\r\n        onLogin,\r\n        onSignUp,\r\n\r\n    }\r\n\r\n\r\n}\r\nfunction useHistory() {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n","C:\\Users\\USER\\AbabaTask\\frontend\\src\\hooks\\functionalityMovies.ts",["92"],[],"import axios from 'axios';\r\nimport React from 'react'\r\nimport { MovieSchema, PaginatedMovieResponse } from '../Features/Movie/MovieSchema';\r\n\r\nexport default function useFunctionalityMovies() {\r\n\r\n\r\n    const onAddMovie = React.useCallback(\r\n        async (form: MovieSchema): Promise<null> => {\r\n            // const btnLoading = UtilsJQuery.Ladda(\".login-form-submit-btn\");\r\n            // btnLoading.start?.();\r\n            let apiUrl = \"http://localhost:3333/movie/add\"\r\n            let updatedForm = {...form, rating: parseInt(form.rating)}\r\n            try {\r\n                const res = await axios.post<MovieSchema>(\r\n                    apiUrl,\r\n                    updatedForm\r\n                );\r\n                if (true) {\r\n                }\r\n                else {\r\n                    // toast.error(res.data.message);\r\n                }\r\n\r\n            } catch (e: any) {\r\n                // setErrMsg((e as Error).message);\r\n                // toast.error(e.message);\r\n                console.log(\"error\", e)\r\n            }\r\n            // btnLoading.stop?.();\r\n            return Promise.resolve(null);\r\n        },\r\n        []\r\n    );\r\n\r\n    const onFetchMovies = React.useCallback(\r\n        async(): Promise<null | PaginatedMovieResponse> => {\r\n            // const btnLoading = UtilsJQuery.Ladda(\".login-form-submit-btn\");\r\n            // btnLoading.start?.();\r\n            let apiUrl = `http://localhost:3333/movie/paginated?skip=0&take=10`\r\n            try {\r\n                const res = await axios.get<PaginatedMovieResponse>(\r\n                    apiUrl,\r\n                );\r\n\r\n\r\n                if (res.data) {\r\n                    return Promise.resolve(res.data);\r\n                   \r\n                }\r\n                else {\r\n                    // toast.error(res.data.message);\r\n                }\r\n\r\n            } catch (e: any) {\r\n               \r\n                console.log(\"error\", e)\r\n            }\r\n            // btnLoading.stop?.();\r\n            return Promise.resolve(null);\r\n        },\r\n        []\r\n    );\r\n\r\n  return {\r\n    onAddMovie,\r\n    onFetchMovies,\r\n  }\r\n}\r\n","C:\\Users\\USER\\AbabaTask\\frontend\\src\\Features\\Movie\\MovieSchema.ts",[],[],{"ruleId":"93","severity":1,"message":"94","line":12,"column":3,"nodeType":"95","messageId":"96","endLine":12,"endColumn":7},{"ruleId":"93","severity":1,"message":"97","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":12},{"ruleId":"93","severity":1,"message":"98","line":9,"column":37,"nodeType":"95","messageId":"96","endLine":9,"endColumn":45},{"ruleId":"93","severity":1,"message":"99","line":9,"column":47,"nodeType":"95","messageId":"96","endLine":9,"endColumn":52},{"ruleId":"93","severity":1,"message":"100","line":3,"column":19,"nodeType":"95","messageId":"96","endLine":3,"endColumn":30},{"ruleId":"93","severity":1,"message":"101","line":3,"column":32,"nodeType":"95","messageId":"96","endLine":3,"endColumn":45},{"ruleId":"93","severity":1,"message":"98","line":11,"column":37,"nodeType":"95","messageId":"96","endLine":11,"endColumn":45},{"ruleId":"93","severity":1,"message":"99","line":11,"column":47,"nodeType":"95","messageId":"96","endLine":11,"endColumn":52},{"ruleId":"93","severity":1,"message":"100","line":2,"column":19,"nodeType":"95","messageId":"96","endLine":2,"endColumn":30},{"ruleId":"93","severity":1,"message":"101","line":2,"column":32,"nodeType":"95","messageId":"96","endLine":2,"endColumn":45},{"ruleId":"93","severity":1,"message":"98","line":9,"column":37,"nodeType":"95","messageId":"96","endLine":9,"endColumn":45},{"ruleId":"93","severity":1,"message":"99","line":9,"column":47,"nodeType":"95","messageId":"96","endLine":9,"endColumn":52},{"ruleId":"93","severity":1,"message":"102","line":4,"column":31,"nodeType":"95","messageId":"96","endLine":4,"endColumn":53},{"ruleId":"103","severity":1,"message":"104","line":15,"column":4,"nodeType":"105","endLine":15,"endColumn":6,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"107","line":4,"column":23,"nodeType":"95","messageId":"96","endLine":4,"endColumn":34},{"ruleId":"103","severity":1,"message":"108","line":39,"column":9,"nodeType":"105","endLine":39,"endColumn":11,"suggestions":"109"},{"ruleId":"93","severity":1,"message":"110","line":81,"column":10,"nodeType":"95","messageId":"96","endLine":81,"endColumn":20},{"ruleId":"93","severity":1,"message":"111","line":15,"column":23,"nodeType":"95","messageId":"96","endLine":15,"endColumn":26},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'setValue' is assigned a value but never used.","'reset' is assigned a value but never used.","'NestedValue' is defined but never used.","'SubmitHandler' is defined but never used.","'PaginatedMovieResponse' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onFetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'useLocation' is defined but never used.","React Hook React.useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["113"],"'useHistory' is defined but never used.","'res' is assigned a value but never used.",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [onFetchMovies]",{"range":"118","text":"119"},"Update the dependencies array to be: [navigate]",{"range":"120","text":"121"},[502,504],"[onFetchMovies]",[1225,1227],"[navigate]"]